# GitHub Actions workflow to build and deploy a Python (FastAPI) app to Azure App Service

name: Build and deploy Python app to Azure Web App - HeirAidBackend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      # Optional: Run tests
      # - name: Run tests
      #   run: |
      #     cd backend
      #     pytest

      - name: Zip artifact for deployment
        run: |
          cd backend
          zip -r ../release.zip .
          cd ..

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_69D33CA1D395419ABA053BE5F01B7FD5 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_01B1C38A184744C4860F0AF51D871B49 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_256EF27FC90C419FB80957E14871D487 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'HeirAidBackend'
          slot-name: 'Production'
          package: 'release.zip'
          startup-command: 'uvicorn backend.main:app --host 0.0.0.0 --port $PORT'
